#include <ESP8266WiFi.h>

#define IRLED 4

int withLed = 0;
int withoutLed = 0;
int stripeCount = 0;
int diff = 0;
bool disconn = false;
unsigned long disconnTime = 0;
unsigned long duration = 0;
unsigned long lastTick = 0;
WiFiClient client;

const int threshold = 150;

// Wi-Fi Settings
const char* ssid = "Bergernetz"; // your wireless network name (SSID)
const char* password = "GrummelKeks1"; // your Wi-Fi network password
const char* apiIP = "192.168.0.38";

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  WiFi.mode(WIFI_STA);
  Serial.print("Connecting to WiFi");
  pinMode(IRLED, OUTPUT);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("Connected to WiFi!");
}

void loop() {

  if (WiFi.status() != WL_CONNECTED && !disconn) {
      disconn = true;
      disconnTime = millis();
    };

  if (WiFi.status() == WL_CONNECTED && disconn) {
      disconn = false;
      duration = millis() - disconnTime;
  
      //Report the disconnect to the API
      if (client.connect(apiIP, 80)){
        // we are connected to the host!
        client.print(String("GET /connloss/")+ disconnTime + "/ HTTP/1.1\r\n" +
             "Host: " + apiIP + "\r\n" +
             "Connection: close\r\n" +
             "\r\n"
            );
        Serial.println("Reporting disconnect!");
        while (client.connected()){
          if (client.available()){
            String line = client.readStringUntil('\n');
            Serial.println(line);
          }
        }
        client.stop();
        Serial.println("\n[Disconnected]");
        lastTick = millis();
      }else{
        // connection failure
        Serial.println("Connection to API failed!");        
      }
      
    }

  //Read without LED first, then switch the LED on and read again. This will filter out IR light that is not generated by the LED.
  withoutLed = analogRead(A0);
  
  digitalWrite(IRLED, LOW);

  delay(10);

  withLed = analogRead(A0);

  digitalWrite(IRLED, HIGH);

  diff = withoutLed - withLed;

//    Serial.print("Without LED: ");
//    Serial.println(withoutLed);

//    Serial.print("With LED: ");
//    Serial.println(withLed);

//    Serial.print("Difference is: ");
//    Serial.println(diff);

  //We are detecting a stripe! (Reality check: last tick was at least 1 sec ago -> less than 50kW usage)
  if(diff < threshold && millis() - lastTick > 1000){
    stripeCount++;
  }

  //We were detecting a stripe and it has just ended!
  if(diff > threshold && stripeCount > 0){
    stripeCount = 0;

    //Report the stripe to the API
    if (client.connect(apiIP, 80)){
      // we are connected to the host!
      client.print(String("GET /tick") + " HTTP/1.1\r\n" +
           "Host: " + apiIP + "\r\n" +
           "Connection: close\r\n" +
           "\r\n"
          );
      Serial.println("Reporting tick!");
      while (client.connected()){
        if (client.available()){
          String line = client.readStringUntil('\n');
          Serial.println(line);
        }
      }
      client.stop();
      Serial.println("\n[Disconnected]");
      lastTick = millis();
    }else{
      // connection failure
      Serial.println("Connection to tick-API failed!");        
    }
  }

  //The led probably needs some time to switch on and off
  delay(20);
}
